package com.dev.test.ioc;import java.lang.reflect.Field;import java.util.HashMap;import java.util.Map;import java.util.concurrent.ConcurrentHashMap;/** * @version 1.0 * @Description * @Author wangbo * @Date 2021/1/7 9:54 上午 */public class MyIOC {    private static ConcurrentHashMap<String, Object> beanFactory = new ConcurrentHashMap<>();    public static ConcurrentHashMap<String, Object> getBeanFactory() {        return beanFactory;    }    public static void updateBeanFromBeanFactory(String typeName, Object proxyInstance) {        beanFactory.put(typeName, proxyInstance);    }    public static Object getBean(String completeClassName) {        return beanFactory.get(completeClassName);    }    public static void init() throws ClassNotFoundException, IllegalAccessException, InstantiationException {        //加载类，多种方式，可以从文件路径加载，可以从包加载，可以根据名字加载。        String[] classname = {"Student", "Teacher", "School"};        String packname = "com.dev.test.ioc";        for (String s : classname) {            String typename = packname + "." + s;            Class clazz = Class.forName(typename);            updateBeanFromBeanFactory(typename, clazz.newInstance());        }        autoWired();    }    public static void autoWired() throws IllegalAccessException {        for (Map.Entry<String, Object> entry : beanFactory.entrySet()) {            Field[] fields = entry.getValue().getClass().getDeclaredFields();            for (Field field : fields) {                Object object = beanFactory.get(field.getType().getTypeName());                field.setAccessible(true);                field.set(entry.getValue(), object);            }        }    }}